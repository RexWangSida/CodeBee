[{"/Users/weidongyang/Desktop/CodeBee/codebee/src/index.js":"1","/Users/weidongyang/Desktop/CodeBee/codebee/src/App.js":"2","/Users/weidongyang/Desktop/CodeBee/codebee/src/reportWebVitals.js":"3","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Navbar.js":"4","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Signin.js":"5","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Home.js":"6","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Signup.js":"7","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Level.js":"8","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Achievement.js":"9","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game.js":"10","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/HighlightedChar.js":"11","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Data.js":"12","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Dropzone.js":"13","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/utils.js":"14","/Users/weidongyang/Desktop/CodeBee/codebee/src/store/store.js":"15","/Users/weidongyang/Desktop/CodeBee/codebee/src/store/reducer.js":"16","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game2.js":"17"},{"size":500,"mtime":1614894483114,"results":"18","hashOfConfig":"19"},{"size":336,"mtime":1615000940286,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1614894483115,"results":"21","hashOfConfig":"19"},{"size":6096,"mtime":1615444403770,"results":"22","hashOfConfig":"19"},{"size":5248,"mtime":1615444579372,"results":"23","hashOfConfig":"19"},{"size":3257,"mtime":1614894514780,"results":"24","hashOfConfig":"19"},{"size":3768,"mtime":1615445470390,"results":"25","hashOfConfig":"19"},{"size":3461,"mtime":1615104831387,"results":"26","hashOfConfig":"19"},{"size":1827,"mtime":1614894514779,"results":"27","hashOfConfig":"19"},{"size":7826,"mtime":1614894514779,"results":"28","hashOfConfig":"19"},{"size":490,"mtime":1614894514780,"results":"29","hashOfConfig":"19"},{"size":1050,"mtime":1614894514779,"results":"30","hashOfConfig":"19"},{"size":1716,"mtime":1614894514779,"results":"31","hashOfConfig":"19"},{"size":2437,"mtime":1614894514780,"results":"32","hashOfConfig":"19"},{"size":209,"mtime":1615011132122,"results":"33","hashOfConfig":"19"},{"size":659,"mtime":1615444638339,"results":"34","hashOfConfig":"19"},{"size":7297,"mtime":1615104831386,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1hjmb6j",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"/Users/weidongyang/Desktop/CodeBee/codebee/src/index.js",[],["78","79"],"/Users/weidongyang/Desktop/CodeBee/codebee/src/App.js",["80","81","82","83"],"import './App.css';\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\n\nfunction App() {\n  return (\n    <Provider store = {store}>\n      <Navbar />\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/weidongyang/Desktop/CodeBee/codebee/src/reportWebVitals.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Navbar.js",["84","85","86"],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Signin.js",["87","88","89"],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Home.js",["90"],"import React, { Component } from \"react\";\nimport HighlightedChar from \"./HighlightedChar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Level from \"./Level\";\nimport Achievement from \"./Achievement\";\nimport Game from \"./GameSystem/Game\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"flex flex-col mt-20\">\n          <h1 className=\"md:text-4xl mb-16 text-5xl\">\n            <HighlightedChar color=\"blue\">C</HighlightedChar>odebee{\" \"}\n          </h1>\n        </div>\n        <main className=\"mt-5 mx-auto max-w-7xl px-4 items-center\">\n          <div className=\"sm:text-center lg:text-center\">\n            <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\">\n              <span className=\"block xl:inline\">Platform to enrich your </span>\n              <span className=\"block text-indigo-600 xl:inline\">\n                Programming skills\n              </span>\n            </h1>\n            <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl\">\n            CodeBee, a web application to deliver a beginner friendly, gamified educational experience\nto students aged 10-16, in order to help them learn the basic concepts and thinking patterns\nnecessary for computer programming\n            </p>\n            <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-center\">\n              <div className=\"rounded-md shadow\">\n                <a\n                  href=\"/level-selection\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10\"\n                >\n                  Select Level\n                </a>\n              </div>\n              <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                <a\n                  href=\"/achievements\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\n                >\n                  View Achievement\n                </a>\n              </div>\n              <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                <a\n                  href=\"/game\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\n                >\n                  Game\n                </a>\n              </div>\n            </div>\n          </div>\n          <div>\n</div>\n\n        </main>\n\n        <Router>\n          <div>\n            <div className=\"auth-wrapper\">\n              <div className=\"auth-inner\">\n                <Switch>\n                  <Route path=\"/level-selection\" component={Level} />\n                  <Route path=\"/achievements\" component={Achievement} />\n                  <Route path=\"/game\" component={Game} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </>\n    );\n  }\n}\n","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Signup.js",["91","92"],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Level.js",["93","94","95"],"import React from \"react\";\nimport \"./Level.css\"\nimport Game from \"./GameSystem/Game\"\nimport Game2 from \"./GameSystem/Game2\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nvar unlockedLevels = [\"1-1\", \"1-2\", \"2-1\", \"2-2\"]\n\nexport default class Level extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allLevels: [\"1-1\", \"1-2\", \"1-3\", \"2-1\", \"2-2\"],\n            unlockedLevels: [\"1-1\",\"1-2\"],\n            selected: \"\"\n        }\n    }\n\n    // load() {\n    //     var unlockedLevels = fetch(\"data\")\n    //     this.setState({ unlockedLevels: unlockedLevels})\n    // }\n\n    select = (event) => {\n        console.log(event.target.value)\n        this.setState({ selected: event.target.value });\n    }\n\n    render() {\n        // load();\n        var buttons = []\n        var i;\n        for (i = 0; i < this.state.allLevels.length; i++) {\n            var levelname = this.state.allLevels[i];\n            console.log(levelname)\n            if (levelname == \"1-1\") {\n                buttons.push(\n                    <Link to=\"/game\" key={levelname}>\n                        <button\n                            id=\"levelButton\"\n                            className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo\"\n                            onClick={this.select}\n                            value={levelname}>\n                            {levelname}\n                        </button>\n                    </Link>\n                );\n            }\n            else if (levelname == \"1-2\") {\n                buttons.push(\n                    <Link to=\"/second\" key={levelname}>\n                        <button\n                            id=\"levelButton\"\n                            className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo\"\n                            onClick={this.select}\n                            value={levelname}>\n                            {levelname}\n                        </button>\n                    </Link>\n                );\n            }\n            else {\n                buttons.push(<button id=\"levelButton\" className=\"disabled py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600\" disabled key={levelname}> {levelname} </button>);\n            }\n        }\n\n        return (\n            <>\n                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\" style={{ margin: \"30px\" }}>\n                    <span className=\"block text-indigo-600 xl:inline\" >\n                        Level\n              </span>\n                    <span className=\"block xl:inline\"> Selection </span>\n                </h1>\n                <div id=\"levelGrid\" className=\"grid grid-rows-3 grid-flow-col gap-4\" >\n                    {buttons}\n                </div>\n\n                <Router>\n                    <div >\n                        <div className=\"auth-wrapper\">\n                            <div className=\"auth-inner\">\n                                <Switch>\n                                    <Route exact path=\"/game\" component={Game} />\n                                    <Route path=\"/second\" component={Game2} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                </Router>\n            </>\n        );\n    }\n}\n","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Achievement.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game.js",["96","97"],"import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BLOCKS, ATTRS } from './Data';\nimport { shuffle, move, GAME_STATE } from './utils';\nimport Dropzone from './Dropzone';\nimport { Link } from 'react-router-dom';\nimport './Game.css';\n\nconst GAME_DURATION = 1000 * 30; // 30 seconds\n\nconst initialState = {\n  // we initialize the state by populating the bench with a shuffled collection of blocks\n  bench: shuffle(BLOCKS),\n  [ATTRS.VAR]: [],\n  [ATTRS.OP]: [],\n  [ATTRS.VAL]: [],\n  gameState: GAME_STATE.READY,\n  timeLeft: 0,\n};\n\nclass Instruction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instruction: \"A variable can be thought of as a container with a name. The container is uniquely named and can be assigned a value, which will then be stored as the contents of the container. The name can then be used to retrieve the contents of the container.\\nThe retrieved data can be viewed, modified or used in other, more complex operations. As an example, a variable can be called \\\"num\\\" and assigned a value 5 through the code:\\nnum = 5\\nYour challenge here is to store the values 1 and 3 in two variables called \\\"a\\\" and \\\"b\\\". \\nStore the result of adding the value in these two variables in a new variable called \\\"c\\\".\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"left instruction\">{this.state.instruction}</div>\n    );\n  }\n}\nclass Title extends React.Component {\n  render() {\n    return (\n      <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\" style={{ margin: \"20px auto\" }}>\n        <span className=\"block xl:inline\" >Level</span>\n        <span className=\"block text-indigo-600 xl:inline\"> 1-1 </span>\n      </h1>\n    );\n  }\n}\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMessage: false\n    }\n  }\n  onButtonClickHandler = () => {\n    this.setState({ showMessage: true });\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.showMessage && <Complete />}\n        <div className=\"left result\">{this.state.showMessage && <p>c = 3<br />You are correct!</p>}</div>\n        <div className='right' style={{ margin: \"auto\" }}>\n          <button className=\"py-3 px-5 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.onButtonClickHandler}>Submit</button>\n        </div>\n      </>\n    );\n  }\n}\n\nclass Complete extends React.Component {\n\n  render() {\n    return (\n      <>\n        <div className=\"popwindow\">\n          <div className=\"windowtitle text-xl tracking-tight font-bold text-indigo-600\">Level Completed</div>\n          <div className=\"windowcontent\">\n            <div className=\"windowtext text-xl tracking-tight\" >\n              Congratulations, you're completed this level.\n          </div>\n            <div className=\"windowtext\">\n              <span className=\"text-xl tracking-tight\">You have unlocked an achievement.</span><br />\n              <Link to=\"/achievements\">\n                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Check Achievement</button></Link>\n            </div>\n            <Buttons comp={true} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n\nclass Buttons extends React.Component {\n\n  restart = () => {\n    window.location.reload();\n  }\n  render() {\n    return (\n      <div className=\"buttonGroup\">\n        <Link to=\"/level-selection\">\n          <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Return</button>\n        </Link>\n        <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.restart}>Restart</button>\n        {this.props.comp ? <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Next</button> : <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Save</button>}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  state = initialState;\n\n  onDragEnd = ({ source, destination }) => {\n    if (!destination) {\n      return;\n    }\n\n    this.setState(state => {\n      return move(state, source, destination);\n    });\n  };\n\n  submit = () => {\n\n    // var stms = []\n    // var blocks = this.state[ATTRS.PLAY];\n    // for (var i=0; i < blocks.length; i++) {\n    //   var block = blocks[i];\n    //   var stmt = {\n    //     \"block\": block.attr1,\n    //     \"expr\": {\n    //       \"block\": block.attr3,\n    //       \"type\": block.attr4,\n    //       \"value\": block.name.split[-1]\n    //     },\n    //     \"ident\": {\n    //       \"block\": block.attr2,\n    //       \"ident\": block.name.split[0]\n    //     }\n    //   }\n    //   stms.push(stmt);\n    // }\n    // console.log(stmt);\n    const code = {\n      \"block\": \"program\",\n      \"body\": {\n        \"block\": \"scope\",\n        \"stmts\": [\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"literal\",\n              \"type\": \"int\",\n              \"value\": \"1\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var1\"\n            }\n          },\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"literal\",\n              \"type\": \"int\",\n              \"value\": \"3\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var2\"\n            }\n          },\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"binop\",\n              \"expr1\": {\n                \"block\": \"variable\",\n                \"ident\": \"var1\"\n              },\n              \"expr2\": {\n                \"block\": \"variable\",\n                \"ident\": \"var2\"\n              },\n              \"oper\": \"+\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var3\"\n            }\n          }\n        ]\n      },\n      \"ident\": {\n        \"block\": \"variable\",\n        \"ident\": \"testProg\"\n      }\n    }\n    //need a fetch here to send to backend?\n    console.log(code);\n  }\n\n  render() {\n    const { gameState, timeLeft, bench, ...groups } = this.state;\n    const isDropDisabled = gameState === GAME_STATE.DONE;\n\n    return (\n      <div className='canves'>\n        <div className='row'>\n          <Instruction />\n          <div className=\"right\">\n            <Title />\n            <Buttons />\n          </div>\n        </div>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"row row-auto\" style={{ height: \"calc(100% - 408px)\" }}>\n            <div className=\"left row block bg-indigo-200 rounded-lg p-4 border border-gray-200\">\n              <Dropzone\n                pos=\"col\"\n                id={ATTRS.VAR}\n                blocks={this.state[ATTRS.VAR]}\n                isDropDisabled={isDropDisabled}\n              />\n              <Dropzone\n                pos=\"col\"\n                id={ATTRS.OP}\n                blocks={this.state[ATTRS.OP]}\n                isDropDisabled={isDropDisabled}\n              />\n              <Dropzone\n                pos=\"col\"\n                id={ATTRS.VAL}\n                blocks={this.state[ATTRS.VAL]}\n                isDropDisabled={isDropDisabled}\n              />\n            </div>\n            <Dropzone\n              pos=\"right\"\n              id=\"bench\"\n              blocks={bench}\n              isDropDisabled={isDropDisabled} />\n          </div>\n        </DragDropContext>\n        <div className='row' style={{ bottom: \"0px\" }}>\n          <Result />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/HighlightedChar.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Data.js",["98"],"export const ATTRS = {\n  VAR: 'var',\n  OP: 'op',\n  VAL: 'val',\n};\n\nexport const BLOCKS = [\n  {\n    name: 'a',\n    name: 'a',\n    attr1: 'assignment',\n    ddd: '0'\n  },\n  {\n    name: 'b',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '1'\n  },\n  {\n    name: 'c',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    attr4: 'int',\n    ddd: '2'\n  },\n  {\n    name: '=',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '3'\n  },\n  {\n    name: '=',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '4'\n  },\n  {\n    name: '=',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '5'\n  },\n  {\n    name: 'a + b',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '6'\n  },\n  {\n    name: '1',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '7'\n  },\n  {\n    name: '3',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '8'\n  },\n];\n\n","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Dropzone.js",["99"],"import React from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst Dropzone = ({ isDropDisabled, blocks, id, pos }) => (\n  <div className={pos + \" dropzone flex row-auto flex-row\"}>\n    <a style={{ width: \"100%\" }} className=\"scrollble bg-indigo-300 hover:bg-indigo-400 hover:border-transparent hover:shadow-lg group block rounded-lg p-4 border border-gray-200\">\n      <dl className=\"grid sm:block lg:grid xl:block items-center\" style={{ height: \"100%\" }}>\n        <div style={{ height: \"100%\" }}>\n          <dd className=\"group-hover:text-white leading-6 font-medium text-black\" style={{ height: \"100%\" }} >\n            <Droppable droppableId={id} isDropDisabled={isDropDisabled}>\n      {provided => {\n        return (\n          <div className=\"menu block-list\" {...provided.droppableProps} style={{height: \"100%\"}} ref={provided.innerRef}>\n            {blocks.map(({ name, ddd }, index) => (\n              <Block key={ddd} ddd={ddd} name={name} index={index}/>\n            ))}\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n    </dd>\n        </div>\n      </dl>\n    </a>\n  </div>\n);\n\nconst Block = ({ name, index, ddd }) => (\n  <Draggable name={name} key={ddd} draggableId={ddd} index={index}>\n    {provided => {\n      return (\n        <div\n          className=\"menu-item tile tile-centered\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div className=\"codeblock hover:bg-indigo-600 hover:border-transparent tile-content block rounded-lg p-2 border-2 border-indigo-600\" >{name}</div>\n        </div>\n      );\n    }}\n  </Draggable>\n);\n\nexport default Dropzone;","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/utils.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/store/store.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/store/reducer.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game2.js",["100","101"],"import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BLOCKS, ATTRS } from './Data';\nimport { shuffle, move, GAME_STATE } from './utils';\nimport Dropzone from './Dropzone';\nimport { Link } from 'react-router-dom';\nimport './Game.css';\n\nconst GAME_DURATION = 1000 * 30; // 30 seconds\n\nconst initialState = {\n  // we initialize the state by populating the bench with a shuffled collection of blocks\n  bench: shuffle(BLOCKS),\n  [ATTRS.VAR]: [],\n  [ATTRS.OP]: [],\n  [ATTRS.VAL]: [],\n  gameState: GAME_STATE.READY,\n  timeLeft: 0,\n};\n\nclass Instruction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instruction: \"A variable can be thought of as a container with a name. The container is uniquely named and can be assigned a value, which will then be stored as the contents of the container. The name can then be used to retrieve the contents of the container.\\nThe retrieved data can be viewed, modified or used in other, more complex operations. As an example, a variable can be called \\\"num\\\" and assigned a value 5 through the code:\\nnum = 5\\nYour challenge here is to store the values 1 and 3 in two variables called \\\"a\\\" and \\\"b\\\". \\nStore the result of adding the value in these two variables in a new variable called \\\"c\\\".\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"left instruction\">{this.state.instruction}</div>\n    );\n  }\n}\nclass Title extends React.Component {\n  render() {\n    return (\n      <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\" style={{ margin: \"20px auto\" }}>\n        <span className=\"block xl:inline\" >Level</span>\n        <span className=\"block text-indigo-600 xl:inline\"> 1-2 </span>\n      </h1>\n    );\n  }\n}\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMessage: false\n    }\n  }\n  onButtonClickHandler = () => {\n    this.setState({ showMessage: true });\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.showMessage && <Complete />}\n        <div className=\"left result\">{this.state.showMessage && <p>c = 3<br />You are correct!</p>}</div>\n        <div className='right' style={{ margin: \"auto\" }}>\n          <button className=\"py-3 px-5 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.onButtonClickHandler}>Submit</button>\n        </div>\n      </>\n    );\n  }\n}\n\nclass Complete extends React.Component {\n\n  render() {\n    return (\n      <>\n        <div className=\"popwindow\">\n          <div className=\"windowtitle text-xl tracking-tight font-bold text-indigo-600\">Level Completed</div>\n          <div className=\"windowcontent\">\n            <div className=\"windowtext text-xl tracking-tight\" >\n              Congratulations, you're completed this level.\n          </div>\n            <div className=\"windowtext\">\n              <span className=\"text-xl tracking-tight\">You have unlocked an achievement.</span><br />\n              <Link to=\"/achievements\">\n                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Check Achievement</button></Link>\n            </div>\n            <Buttons comp={true} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n\nclass Buttons extends React.Component {\n\n  restart = () => {\n    window.location.reload();\n  }\n  render() {\n    return (\n      <div className=\"buttonGroup\">\n        <Link to=\"/level-selection\">\n          <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Return</button>\n        </Link>\n        <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.restart}>Restart</button>\n        {this.props.comp ? <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Next</button> : <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Save</button>}\n      </div>\n    );\n  }\n}\n\nclass Game2 extends React.Component {\n  state = initialState;\n\n  onDragEnd = ({ source, destination }) => {\n    if (!destination) {\n      return;\n    }\n\n    this.setState(state => {\n      return move(state, source, destination);\n    });\n  };\n\n  submit = () => {\n    const code = {\n      \"block\": \"program\",\n      \"body\": {\n        \"block\": \"scope\",\n        \"stmts\": [\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"literal\",\n              \"type\": \"int\",\n              \"value\": \"1\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var1\"\n            }\n          },\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"literal\",\n              \"type\": \"int\",\n              \"value\": \"3\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var2\"\n            }\n          },\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"binop\",\n              \"expr1\": {\n                \"block\": \"variable\",\n                \"ident\": \"var1\"\n              },\n              \"expr2\": {\n                \"block\": \"variable\",\n                \"ident\": \"var2\"\n              },\n              \"oper\": \"+\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var3\"\n            }\n          }\n        ]\n      },\n      \"ident\": {\n        \"block\": \"variable\",\n        \"ident\": \"testProg\"\n      }\n    }\n    //need a fetch here to send to backend?\n    console.log(code);\n  }\n\n  render() {\n    const { gameState, timeLeft, bench, ...groups } = this.state;\n    const isDropDisabled = gameState === GAME_STATE.DONE;\n\n    return (\n      <div className='canves'>\n        <div className='row'>\n          <Instruction />\n          <div className=\"right\">\n            <Title />\n            <Buttons />\n          </div>\n        </div>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"row row-auto\" style={{ height: \"calc(100% - 408px)\" }}>\n            <div className=\"left row block bg-indigo-200 rounded-lg p-4 border border-gray-200\">\n              <Dropzone\n                pos=\"col\"\n                id={ATTRS.VAR}\n                blocks={this.state[ATTRS.VAR]}\n                isDropDisabled={isDropDisabled}\n              />\n              <Dropzone\n                pos=\"col\"\n                id={ATTRS.OP}\n                blocks={this.state[ATTRS.OP]}\n                isDropDisabled={isDropDisabled}\n              />\n              <Dropzone\n                pos=\"col\"\n                id={ATTRS.VAL}\n                blocks={this.state[ATTRS.VAL]}\n                isDropDisabled={isDropDisabled}\n              />\n            </div>\n            <Dropzone\n              pos=\"right\"\n              id=\"bench\"\n              blocks={bench}\n              isDropDisabled={isDropDisabled} />\n          </div>\n        </DragDropContext>\n        <div className='row' style={{ bottom: \"0px\" }}>\n          <Result />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game2;",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":27,"nodeType":"108","messageId":"109","endLine":3,"endColumn":33},{"ruleId":"106","severity":1,"message":"110","line":3,"column":35,"nodeType":"108","messageId":"109","endLine":3,"endColumn":41},{"ruleId":"106","severity":1,"message":"111","line":3,"column":43,"nodeType":"108","messageId":"109","endLine":3,"endColumn":48},{"ruleId":"106","severity":1,"message":"112","line":3,"column":50,"nodeType":"108","messageId":"109","endLine":3,"endColumn":54},{"ruleId":"106","severity":1,"message":"112","line":4,"column":50,"nodeType":"108","messageId":"109","endLine":4,"endColumn":54},{"ruleId":"113","severity":1,"message":"114","line":48,"column":7,"nodeType":"115","endLine":48,"endColumn":9,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":96,"column":9,"nodeType":"108","messageId":"119","endLine":96,"endColumn":16},{"ruleId":"106","severity":1,"message":"120","line":1,"column":26,"nodeType":"108","messageId":"109","endLine":1,"endColumn":35},{"ruleId":"106","severity":1,"message":"121","line":2,"column":9,"nodeType":"108","messageId":"109","endLine":2,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":102,"column":15,"nodeType":"124","endLine":105,"endColumn":16},{"ruleId":"106","severity":1,"message":"112","line":3,"column":50,"nodeType":"108","messageId":"109","endLine":3,"endColumn":54},{"ruleId":"106","severity":1,"message":"125","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"121","line":2,"column":9,"nodeType":"108","messageId":"109","endLine":2,"endColumn":20},{"ruleId":"106","severity":1,"message":"126","line":7,"column":5,"nodeType":"108","messageId":"109","endLine":7,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":36,"column":27,"nodeType":"129","messageId":"130","endLine":36,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":49,"column":32,"nodeType":"129","messageId":"130","endLine":49,"endColumn":34},{"ruleId":"106","severity":1,"message":"131","line":9,"column":7,"nodeType":"108","messageId":"109","endLine":9,"endColumn":20},{"ruleId":"106","severity":1,"message":"132","line":207,"column":44,"nodeType":"108","messageId":"109","endLine":207,"endColumn":50},{"ruleId":"133","severity":1,"message":"134","line":10,"column":5,"nodeType":"135","messageId":"130","endLine":10,"endColumn":9},{"ruleId":"122","severity":1,"message":"136","line":6,"column":5,"nodeType":"124","endLine":6,"endColumn":181},{"ruleId":"106","severity":1,"message":"131","line":9,"column":7,"nodeType":"108","messageId":"109","endLine":9,"endColumn":20},{"ruleId":"106","severity":1,"message":"132","line":187,"column":44,"nodeType":"108","messageId":"109","endLine":187,"endColumn":50},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["139"],"no-redeclare","'varSign' is already defined.","redeclared","'useEffect' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'unlockedLevels' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'GAME_DURATION' is assigned a value but never used.","'groups' is assigned a value but never used.","no-dupe-keys","Duplicate key 'name'.","ObjectExpression","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [dispatch]",{"range":"142","text":"143"},[1540,1542],"[dispatch]"]