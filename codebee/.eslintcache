[{"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\index.js":"1","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\reportWebVitals.js":"2","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\App.js":"3","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Navbar.js":"4","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Home.js":"5","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Achievement.js":"6","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Signin.js":"7","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Signup.js":"8","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Level.js":"9","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\GameSystem\\Game.js":"10","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\HighlightedChar.js":"11","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\GameSystem\\utils.js":"12","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\GameSystem\\Data.js":"13","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\GameSystem\\Dropzone.js":"14"},{"size":500,"mtime":1612616639475,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1612616639475,"results":"17","hashOfConfig":"16"},{"size":157,"mtime":1612845957612,"results":"18","hashOfConfig":"16"},{"size":3943,"mtime":1612845957619,"results":"19","hashOfConfig":"16"},{"size":3238,"mtime":1612759594916,"results":"20","hashOfConfig":"16"},{"size":1303,"mtime":1612616683874,"results":"21","hashOfConfig":"16"},{"size":5134,"mtime":1612848415724,"results":"22","hashOfConfig":"16"},{"size":3003,"mtime":1612854323990,"results":"23","hashOfConfig":"16"},{"size":2441,"mtime":1612845957618,"results":"24","hashOfConfig":"16"},{"size":5293,"mtime":1612845957616,"results":"25","hashOfConfig":"16"},{"size":490,"mtime":1612616683875,"results":"26","hashOfConfig":"16"},{"size":2437,"mtime":1612845957617,"results":"27","hashOfConfig":"16"},{"size":425,"mtime":1612845957613,"results":"28","hashOfConfig":"16"},{"size":1601,"mtime":1612845957614,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ebkr17",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\index.js",[],["66","67"],"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\reportWebVitals.js",[],"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\App.js",[],"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Navbar.js",["68","69"],"import React, { useState, useEffect } from \"react\";\nimport logo from \"../images/codebee.jpg\";\nimport cx from \"classnames\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Signin from \"./Signin\";\nimport Home from \"./Home\";\nimport SignUp from \"./Signup\";\nimport Level from \"./Level\";\nimport Achievement from \"./Achievement\";\nimport Game from \"./GameSystem/Game\";\n\nexport default function Navbar({ disableLinks }) {\n  const [isExpanded, toggleExpansion] = useState(false);\n\n  return (\n    <>\n      <header className=\"md:px-6 px-6 border-b-2 bg-white flex flex-wrap items-center py-4\">\n        <div className=\"flex-1 flex justify-between items-center\">\n          <a href=\"/\" className=\"py-3\">\n            <img className=\"h-16 w-auto\" src={logo} alt=\"Logo\" />\n          </a>\n        </div>\n        <div className=\"block md:hidden\">\n          <button\n            onClick={() => toggleExpansion(!isExpanded)}\n            aria-label=\"Expand Navigation links\"\n            className=\"transition duration-700 ease-in-out hover:bg-gray-300 rounded flex items-center px-3 py-2 text-gray-700\"\n          >\n            <div\n              className={cx({\n                hidden: isExpanded,\n                block: !isExpanded,\n              })}\n            >\n              <i className=\"fas fa-bars w-4\"></i>\n            </div>\n            <div\n              className={cx({\n                hidden: !isExpanded,\n                block: isExpanded,\n              })}\n            >\n              <i className=\"fas fa-times w-4\"></i>\n            </div>\n          </button>\n        </div>\n        {!disableLinks && (\n          <div\n            className={`${\n              isExpanded ? `block` : `hidden`\n            } top-navbar border-gray-900 w-full md:inline-flex md:w-auto px-2`}\n            id=\"menu\"\n          >\n            <a\n              activeClass=\"active\"\n              to=\"About\"\n              spy={true}\n              smooth={true}\n              offset={50}\n              duration={500}\n              delay={200}\n              className=\"md:p-4 pl-2 py-3 px-0 block border-b-2 border-transparent transition duration-150 hover:bg-gray-100 ease-in-out width:1px text-gray-700 tracking-wider rounded-md\"\n              href=\"/\"\n            >\n              Home\n            </a>\n            <a\n              activeClass=\"active\"\n              to=\"Events\"\n              spy={true}\n              smooth={true}\n              offset={50}\n              duration={600}\n              delay={200}\n              className=\"md:p-4 pl-2 py-3 px-0 block border-b-2 border-transparent transition duration-150 hover:bg-gray-100 ease-in-out width:1px text-gray-700 tracking-wider rounded-md\"\n              href=\"/sign-in\"\n            >\n              Sign in\n            </a>\n            <a\n              activeClass=\"active\"\n              to=\"Media\"\n              spy={true}\n              smooth={true}\n              offset={50}\n              duration={700}\n              delay={200}\n              className=\"md:p-4 pl-2 py-3 px-0 block border-b-2 border-transparent transition duration-150 hover:bg-gray-100 ease-in-out width:1px text-gray-700 tracking-wider rounded-md\"\n              href=\"/sign-up\"\n            >\n              Sign up\n            </a>\n          </div>\n        )}\n      </header>\n      <Router>\n        <div className=\"App\">\n          <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/sign-in\" component={Signin} />\n                <Route path=\"/sign-up\" component={SignUp} />\n                <Route path=\"/level-selection\" component={Level} />\n                <Route path=\"/achievements\" component={Achievement} />\n                <Route path=\"/game\" component={Game} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    </>\n  );\n}\n","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Home.js",["70"],"import React, { Component } from \"react\";\nimport HighlightedChar from \"./HighlightedChar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Level from \"./Level\";\nimport Achievement from \"./Achievement\";\nimport Game from \"./GameSystem/Game\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"flex flex-col mt-20\">\n          <h1 className=\"md:text-4xl mb-16 text-5xl\">\n            <HighlightedChar color=\"blue\">C</HighlightedChar>odebee{\" \"}\n          </h1>\n        </div>\n        <main className=\"mt-5 mx-auto max-w-7xl px-4 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n          <div className=\"sm:text-center lg:text-left\">\n            <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\">\n              <span className=\"block xl:inline\">Data to enrich your</span>\n              <span className=\"block text-indigo-600 xl:inline\">\n                online business\n              </span>\n            </h1>\n            <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n              Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure qui\n              lorem cupidatat commodo. Elit sunt amet fugiat veniam occaecat\n              fugiat aliqua.\n            </p>\n            <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\n              <div className=\"rounded-md shadow\">\n                <a\n                  href=\"/level-selection\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10\"\n                >\n                  Select Level\n                </a>\n              </div>\n              <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                <a\n                  href=\"/achievements\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\n                >\n                  View Achievement\n                </a>\n              </div>\n              <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                <a\n                  href=\"/game\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\n                >\n                  Game\n                </a>\n              </div>\n            </div>\n          </div>\n          <div>\n</div>\n\n        </main>\n\n        <Router>\n          <div>\n            <div className=\"auth-wrapper\">\n              <div className=\"auth-inner\">\n                <Switch>\n                  <Route path=\"/level-selection\" component={Level} />\n                  <Route path=\"/achievements\" component={Achievement} />\n                  <Route path=\"/game\" component={Game} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </>\n    );\n  }\n}\n","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Achievement.js",["71"],"import React from \"react\";\nimport \"./Achievement.css\"\n\nvar unlockedAchievements = ['01', '02', '04', '06']\n\nexport default class Achievement extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allAchievements: ['01', '02', '03', '04', '05', '06', '07'],\n            unlockedAchievements: ['01', '02', '04', '06'],\n        }\n    }\n\n    // load() {\n    //     var unlockedAchievements = fetch('data')\n    //     this.setState({ unlockedAchievements: unlockedAchievements})\n    // }\n\n    render() {\n        //load();\n        var achievements = [];\n        var i;\n        for (i = 0; i < this.state.allAchievements.length; i++) {\n            var achievement = this.state.allAchievements[i];\n            if (this.state.unlockedAchievements.includes(achievement)) {\n                achievements.push(<li className=\"achievement\" achievementname={achievement} key={achievement} onClick={this.select}>{achievement}</li>);\n            }\n            else {\n                achievements.push(<li className=\"locked achievement\" achievementname={achievement} key={achievement} >{achievement}</li>);\n            }\n        }\n\n        return (\n            <ul id=\"canvas\" className=\"list-disc\">\n                {achievements}\n            </ul>\n        );\n\n    }\n}\n","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Signin.js",["72"],"import React, { useState } from \"react\";\nexport default function Signin() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function signin() {\n    const data = {\n      email: email,\n      password: password,\n    };\n\n    fetch(\"/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json,text/plain,*/*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if(data.result === 0){\n          alert(data.name);//////////////////////////////////////////////////////////////replace for good authentication operations\n        }else if(data.result === 1){\n          alert(\"The password does not match the email you registered\");//////////////////////replace for email-password not matching(email exists)\n        }else{\n          alert(\"The email is not registered with us\");/////////////////////////////////////replace for email not registered\n        }\n      })\n      .catch(() => {\n        console.log(\"bad request!\");\n      });\n  }\n\n\n  return (\n    <div className=\"max-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Sign in to your account\n          </h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                onChange={(e) => setEmail(e.target.value)}\n                id=\"email-address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                onChange={(e) => setPassword(e.target.value)}\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n              />\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember_me\"\n                name=\"remember_me\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n              />\n              <label\n                htmlFor=\"remember_me\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-sm\">\n              <a\n                href=\"#\"\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n              >\n                Forgot your password?\n              </a>\n            </div>\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              disabled={!validateForm}\n              onClick={signin}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                <svg\n                  className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </span>\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Signup.js",["73","74"],"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\Level.js",["75"],"import React from \"react\";\nimport \"./Level.css\"\nimport Game from \"./GameSystem/Game\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nvar unlockedLevels = [\"1-1\", \"1-2\", \"2-1\", \"2-2\"]\n\nexport default class Level extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allLevels: [\"1-1\", \"1-2\", \"1-3\", \"2-1\", \"2-2\"],\n            unlockedLevels: [\"1-1\", \"1-2\", \"2-1\", \"2-2\"],\n            selected: \"\"\n        }\n    }\n\n    // load() {\n    //     var unlockedLevels = fetch(\"data\")\n    //     this.setState({ unlockedLevels: unlockedLevels})\n    // }\n\n    select = event => {\n        console.log(event.target.value)\n        this.setState({ selected: event.target.value });\n    }\n\n    render() {\n        // load();\n        var buttons = []\n        var i;\n        for (i = 0; i < this.state.allLevels.length; i++) {\n            var levelname = this.state.allLevels[i];\n            if (this.state.unlockedLevels.includes(levelname)) {\n                buttons.push(\n                    <Link to=\"/game\" key={levelname}>\n                        <button\n                            id=\"levelButton\"\n                            className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-blue-500 hover:bg-blue-700\"\n                            onClick={this.select}\n                            value={levelname}>\n                            {levelname}\n                        </button>\n                    </Link>\n                );\n            }\n            else {\n                buttons.push(<button id=\"levelButton\" className=\"disabled py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-blue-500\" disabled key={levelname}> {levelname} </button>);\n            }\n        }\n\n        return (\n            <>\n\n                <div id=\"levelGrid\" className=\"grid grid-rows-3 grid-flow-col gap-4\" >\n                    {buttons}\n                </div>\n\n                <Router>\n                    <div className=\"App\">\n                        <div className=\"auth-wrapper\">\n                            <div className=\"auth-inner\">\n                                <Switch>\n                                    <Route exact path=\"/game\" component={Game} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                </Router>\n            </>\n        );\n    }\n}\n","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\GameSystem\\Game.js",["76","77"],"import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BLOCKS, ATTRS } from './Data';\nimport { shuffle, move, GAME_STATE } from './utils';\nimport Dropzone from './Dropzone';\nimport { Link } from 'react-router-dom';\nimport './Game.css';\n\nconst GAME_DURATION = 1000 * 30; // 30 seconds\n\nconst initialState = {\n  // we initialize the state by populating the bench with a shuffled collection of blocks\n  bench: shuffle(BLOCKS),\n  [ATTRS.PLAY]: [],\n  gameState: GAME_STATE.READY,\n  timeLeft: 0,\n};\n\nclass Instruction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instruction: \"A variable can be thought of as a container with a name, that stores some data. \\nThis data can be viewed, changed and use for other purposes.For example, a variable called num stores a value 5 as: \\nnum = 5\\nYour challenge here is to store the values 2 and 3 in two variables called a and b. \\nThen store the result of adding the value in these two variables in a new variable called c.\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"left instruction\">{this.state.instruction}</div>\n    );\n  }\n}\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"The result of game will be shown here.\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"left result\">{this.state.result}</div>\n    );\n  }\n}\n\nclass Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  restart = () => {\n    window.location.reload();\n  }\n  render() {\n    return (\n      <div className=\"right buttonGroup\">\n        <Link to=\"/level-selection\">\n          <button className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-blue-500\">Return</button>\n        </Link>\n        <button className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-blue-500\" onClick={this.restart}>Restart</button>\n        <button className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-blue-500\">Save</button>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  state = initialState;\n\n  onDragEnd = ({ source, destination }) => {\n    if (!destination) {\n      return;\n    }\n\n    this.setState(state => {\n      return move(state, source, destination);\n    });\n  };\n\n  submit = () => {\n    var stms = []\n    var blocks = this.state[ATTRS.PLAY];\n    for (var i=0; i < blocks.length; i++) {\n      var block = blocks[i];\n      var stmt = {\n        \"block\": block.attr1,\n        \"expr\": {\n          \"block\": block.attr3,\n          \"type\": block.attr4,\n          \"value\": block.name.split[-1]\n        },\n        \"ident\": {\n          \"block\": block.attr2,\n          \"ident\": block.name.split[0]\n        }\n      }\n      stms.push(stmt);\n    }\n    console.log(stmt);\n    const code = {\n      \"block\": \"program\",\n      \"body\": {\n        \"block\": \"scope\",\n        \"stmts\": [\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"literal\",\n              \"type\": \"int\",\n              \"value\": \"1\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var1\"\n            }\n          },\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"literal\",\n              \"type\": \"int\",\n              \"value\": \"3\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var2\"\n            }\n          },\n          {\n            \"block\": \"assignment\",\n            \"expr\": {\n              \"block\": \"binop\",\n              \"expr1\": {\n                \"block\": \"variable\",\n                \"ident\": \"var1\"\n              },\n              \"expr2\": {\n                \"block\": \"variable\",\n                \"ident\": \"var2\"\n              },\n              \"oper\": \"+\"\n            },\n            \"ident\": {\n              \"block\": \"variable\",\n              \"ident\": \"var3\"\n            }\n          }\n        ]\n      },\n      \"ident\": {\n        \"block\": \"variable\",\n        \"ident\": \"testProg\"\n      }\n    }\n    //need a fetch here to send to backend?\n    console.log(code);\n  }\n\n  render() {\n    const { gameState, timeLeft, bench, ...groups } = this.state;\n    const isDropDisabled = gameState === GAME_STATE.DONE;\n\n    return (\n      <div className='canves'>\n        <div className='row'><Instruction /><Buttons /></div>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"row container row-auto\" style={{ height: \"calc(100% - 400px)\" }}>\n            <Dropzone\n              pos=\"left\"\n              id={ATTRS.PLAY}\n              blocks={this.state[ATTRS.PLAY]}\n              isDropDisabled={isDropDisabled}\n            />\n            <Dropzone\n              pos=\"right\"\n              id=\"bench\"\n              blocks={bench}\n              isDropDisabled={isDropDisabled} />\n          </div>\n        </DragDropContext>\n        <div className='row' style={{ bottom: \"0px\" }}>\n          <Result />\n          <div className='right' style={{ margin: \"auto\" }}>\n            <button className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-blue-500\" onClick={this.submit}>Submit</button>\n          </div></div>\n      </div>\n    );\n  }\n}\n\nexport default Game;","C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\HighlightedChar.js",[],"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\GameSystem\\utils.js",[],"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\GameSystem\\Data.js",[],"C:\\Users\\Rex\\Desktop\\CodeBee\\codebee\\src\\components\\GameSystem\\Dropzone.js",["78"],"import React from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst Dropzone = ({ isDropDisabled, blocks, id, pos }) => (\n  <div className={pos + \" dropzone flex row-auto flex-row\"}>\n    <a style={{width: \"100%\"}}className=\"hover:bg-indigo-500 hover:border-transparent hover:shadow-lg group block rounded-lg p-4 border border-gray-200\">\n      <dl className=\"grid sm:block lg:grid xl:block items-center\" style={{ height: \"100%\" }}>\n        <div style={{ height: \"100%\" }}>\n          <dd className=\"group-hover:text-white leading-6 font-medium text-black\" style={{ height: \"100%\" }} >\n            <Droppable droppableId={id} isDropDisabled={isDropDisabled}>\n      {provided => {\n        return (\n          <div className=\"menu block-list \" {...provided.droppableProps} style={{height: \"100%\"}} ref={provided.innerRef}>\n            {blocks.map(({ name }, index) => (\n              <Block key={name} name={name} index={index}/>\n            ))}\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n    </dd>\n        </div>\n      </dl>\n    </a>\n  </div>\n);\n\nconst Block = ({ name, index }) => (\n  <Draggable key={name} draggableId={name} index={index}>\n    {provided => {\n      return (\n        <div\n          className=\"menu-item tile tile-centered\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div className=\"tile-content\" style={{margin: \"auto\", maxWidth: \"100px\"}}>{name}</div>\n        </div>\n      );\n    }}\n  </Draggable>\n);\n\nexport default Dropzone;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"87","line":4,"column":50,"nodeType":"85","messageId":"86","endLine":4,"endColumn":54},{"ruleId":"83","severity":1,"message":"87","line":3,"column":50,"nodeType":"85","messageId":"86","endLine":3,"endColumn":54},{"ruleId":"83","severity":1,"message":"88","line":4,"column":5,"nodeType":"85","messageId":"86","endLine":4,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":98,"column":15,"nodeType":"91","endLine":101,"endColumn":16},{"ruleId":"83","severity":1,"message":"92","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"93","line":10,"column":14,"nodeType":"85","messageId":"86","endLine":10,"endColumn":26},{"ruleId":"83","severity":1,"message":"94","line":6,"column":5,"nodeType":"85","messageId":"86","endLine":6,"endColumn":19},{"ruleId":"83","severity":1,"message":"95","line":9,"column":7,"nodeType":"85","messageId":"86","endLine":9,"endColumn":20},{"ruleId":"83","severity":1,"message":"96","line":165,"column":44,"nodeType":"85","messageId":"86","endLine":165,"endColumn":50},{"ruleId":"89","severity":1,"message":"97","line":6,"column":5,"nodeType":"91","endLine":6,"endColumn":154},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'unlockedAchievements' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'validateForm' is defined but never used.","'unlockedLevels' is assigned a value but never used.","'GAME_DURATION' is assigned a value but never used.","'groups' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]