[{"/Users/weidongyang/Desktop/CodeBee/codebee/src/index.js":"1","/Users/weidongyang/Desktop/CodeBee/codebee/src/App.js":"2","/Users/weidongyang/Desktop/CodeBee/codebee/src/reportWebVitals.js":"3","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Navbar.js":"4","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Signin.js":"5","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Home.js":"6","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Signup.js":"7","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Level.js":"8","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Achievement.js":"9","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game.js":"10","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/HighlightedChar.js":"11","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Data.js":"12","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Dropzone.js":"13","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/utils.js":"14","/Users/weidongyang/Desktop/CodeBee/codebee/src/store/store.js":"15","/Users/weidongyang/Desktop/CodeBee/codebee/src/store/reducer.js":"16","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game2.js":"17","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game3.js":"18","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Data3.js":"19","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Data2.js":"20"},{"size":500,"mtime":1617188816622,"results":"21","hashOfConfig":"22"},{"size":336,"mtime":1617188849959,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1617188816622,"results":"24","hashOfConfig":"22"},{"size":4991,"mtime":1617200598123,"results":"25","hashOfConfig":"22"},{"size":5004,"mtime":1617201135635,"results":"26","hashOfConfig":"22"},{"size":3257,"mtime":1617188849962,"results":"27","hashOfConfig":"22"},{"size":4299,"mtime":1617201126075,"results":"28","hashOfConfig":"22"},{"size":3877,"mtime":1617188849962,"results":"29","hashOfConfig":"22"},{"size":1827,"mtime":1617188849959,"results":"30","hashOfConfig":"22"},{"size":9136,"mtime":1617188849961,"results":"31","hashOfConfig":"22"},{"size":490,"mtime":1617188849961,"results":"32","hashOfConfig":"22"},{"size":1050,"mtime":1617188849960,"results":"33","hashOfConfig":"22"},{"size":1716,"mtime":1617188849960,"results":"34","hashOfConfig":"22"},{"size":2402,"mtime":1617188849961,"results":"35","hashOfConfig":"22"},{"size":209,"mtime":1617188849965,"results":"36","hashOfConfig":"22"},{"size":840,"mtime":1617200954180,"results":"37","hashOfConfig":"22"},{"size":8856,"mtime":1617188849961,"results":"38","hashOfConfig":"22"},{"size":6098,"mtime":1617188849961,"results":"39","hashOfConfig":"22"},{"size":985,"mtime":1617188849960,"results":"40","hashOfConfig":"22"},{"size":550,"mtime":1617188849960,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1hjmb6j",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/weidongyang/Desktop/CodeBee/codebee/src/index.js",[],["91","92"],"/Users/weidongyang/Desktop/CodeBee/codebee/src/App.js",["93","94","95","96"],"\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport store from './store/store'\n\n\nfunction App() {\n  return (\n    <Provider store = {store}>\n      <Navbar />\n    </Provider>\n  );\n}\n\nexport default App;","/Users/weidongyang/Desktop/CodeBee/codebee/src/reportWebVitals.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Navbar.js",["97","98","99","100"],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Signin.js",["101","102","103","104","105","106"],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Home.js",["107"],"import React, { Component } from \"react\";\nimport HighlightedChar from \"./HighlightedChar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Level from \"./Level\";\nimport Achievement from \"./Achievement\";\nimport Game from \"./GameSystem/Game\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"flex flex-col mt-20\">\n          <h1 className=\"md:text-4xl mb-16 text-5xl\">\n            <HighlightedChar color=\"blue\">C</HighlightedChar>odebee{\" \"}\n          </h1>\n        </div>\n        <main className=\"mt-5 mx-auto max-w-7xl px-4 items-center\">\n          <div className=\"sm:text-center lg:text-center\">\n            <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\">\n              <span className=\"block xl:inline\">Platform to enrich your </span>\n              <span className=\"block text-indigo-600 xl:inline\">\n                Programming skills\n              </span>\n            </h1>\n            <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl\">\n            CodeBee, a web application to deliver a beginner friendly, gamified educational experience\nto students aged 10-16, in order to help them learn the basic concepts and thinking patterns\nnecessary for computer programming\n            </p>\n            <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-center\">\n              <div className=\"rounded-md shadow\">\n                <a\n                  href=\"/level-selection\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10\"\n                >\n                  Select Level\n                </a>\n              </div>\n              <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                <a\n                  href=\"/achievements\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\n                >\n                  View Achievement\n                </a>\n              </div>\n              <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                <a\n                  href=\"/game\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\n                >\n                  Game\n                </a>\n              </div>\n            </div>\n          </div>\n          <div>\n</div>\n\n        </main>\n\n        <Router>\n          <div>\n            <div className=\"auth-wrapper\">\n              <div className=\"auth-inner\">\n                <Switch>\n                  <Route path=\"/level-selection\" component={Level} />\n                  <Route path=\"/achievements\" component={Achievement} />\n                  <Route path=\"/game\" component={Game} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </>\n    );\n  }\n}\n","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Signup.js",["108","109","110","111"],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Level.js",["112","113","114"],"import React from \"react\";\nimport \"./Level.css\"\nimport Game from \"./GameSystem/Game\"\nimport Game2 from \"./GameSystem/Game2\";\nimport Game3 from \"./GameSystem/Game3\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport default class Level extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allLevels: [\"1-1\", \"1-2\", \"1-3\", \"2-1\", \"2-2\"],\n            unlockedLevels: [\"1-1\",\"1-2\",\"1-3\"],\n            selected: \"\"\n        }\n    }\n\n\n    select = (event) => {\n        console.log(event.target.value)\n        this.setState({ selected: event.target.value });\n    }\n\n    render() {\n        // load();\n        var buttons = []\n        var i;\n        for (i = 0; i < this.state.allLevels.length; i++) {\n            var levelname = this.state.allLevels[i];\n            if (levelname == \"1-1\") {\n                buttons.push(\n                    <Link to=\"/game\" key={levelname}>\n                        <button\n                            id=\"levelButton\"\n                            className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo\"\n                            onClick={this.select}\n                            value={levelname}>\n                            {levelname}\n                        </button>\n                    </Link>\n                );\n            }\n            else if (levelname == \"1-2\") {\n                buttons.push(\n                    <Link to=\"/second\" key={levelname}>\n                        <button\n                            id=\"levelButton\"\n                            className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo\"\n                            onClick={this.select}\n                            value={levelname}>\n                            {levelname}\n                        </button>\n                    </Link>\n                );\n            }\n            else if (levelname == \"1-3\") {\n                buttons.push(\n                    <Link to=\"/third\" key={levelname}>\n                        <button\n                            id=\"levelButton\"\n                            className=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo\"\n                            onClick={this.select}\n                            value={levelname}>\n                            {levelname}\n                        </button>\n                    </Link>\n                );\n            }\n            else {\n                buttons.push(<button id=\"levelButton\" className=\"disabled py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600\" disabled key={levelname}> {levelname} </button>);\n            }\n        }\n\n        return (\n            <>\n                <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\" style={{ margin: \"30px\" }}>\n                    <span className=\"block text-indigo-600 xl:inline\" >\n                        Level\n              </span>\n                    <span className=\"block xl:inline\"> Selection </span>\n                </h1>\n                <div id=\"levelGrid\" className=\"grid grid-rows-3 grid-flow-col gap-4\" >\n                    {buttons}\n                </div>\n                <Router>\n                        <div className=\"auth-wrapper\">\n                            <div className=\"auth-inner\">\n                                <Switch>\n                                    <Route exact path=\"/game\" component={Game} />\n                                    <Route path=\"/second\" component={Game2} />\n                                    <Route path=\"/third\" component = {Game3}/>\n                                </Switch>\n                            </div>\n                        </div>\n                </Router>\n            </>\n        );\n    }\n}\n","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/Achievement.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game.js",["115"],"import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BLOCKS, ATTRS } from './Data';\nimport { shuffle, move, GAME_STATE } from './utils';\nimport Dropzone from './Dropzone';\nimport { Link } from 'react-router-dom';\nimport './Game.css';\n\nconst initialState = {\n    // we initialize the state by populating the bench with a shuffled collection of blocks\n    bench: shuffle(BLOCKS),\n    hint: \"1: The assignment operator can be used to assign a value to a variable.\\n2: The + operator can be assigned on two variables. Eg: num1 + num2.\\n3: The result of an operation can be directly stored in a variable. Eg: num3 = num1 + 5.\",\n    showHint: false,\n    [ATTRS.VAR]: [],\n    [ATTRS.OP]: [],\n    [ATTRS.VAL]: [],\n};\n\nclass Instruction extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            instruction: \"A variable can be thought of as a container with a name, that stores some data. This data can be viewed, changed and use for other purposes. For example, a variable called num stores a value 5 as:\\n num = 5\\n Your challenge here is to store the values 1 and 3 in two variables called a and b. Then store the result of adding the value in these two variables in a new variable called c.\",\n            hint: \"\"\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"left instruction\">{this.state.instruction}</div>\n        );\n    }\n}\nclass Title extends React.Component {\n    render() {\n        return (\n            <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\" style={{ margin: \"20px auto\" }}>\n                <span className=\"block xl:inline\" >Level</span>\n                <span className=\"block text-indigo-600 xl:inline\"> 1-1 </span>\n            </h1>\n        );\n    }\n}\n\nclass Result extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showMessage: false,\n            answer: false\n        }\n    }\n    onButtonClickHandler = () => {\n        // this.props.submit();\n        this.setState({ showMessage: true });\n        if (this.props.blocks.length != 0) {\n            this.setState({ answer: true });\n        }\n    };\n\n    render() {\n        return (\n            <>\n                {this.state.showMessage && this.state.answer && <Complete />}\n                <div className=\"left result\">{this.state.showMessage && this.state.answer && <p>c = 4<br />You are correct!</p>}{this.state.showMessage && !this.state.answer && <p>Unable to parse, please retry.</p>}</div>\n                <div className='right' style={{ margin: \"auto\" }}>\n                    <button className=\"gamebutton py-3 px-5 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.onButtonClickHandler}>Submit</button>\n                    {this.state.showMessage && !this.state.answer && <button className=\"gamebutton py-3 px-5 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={window.location.reload.bind(window.location)}>Restart</button>}\n                </div>\n            </>\n        );\n    }\n}\n\nclass Complete extends React.Component {\n\n    render() {\n        return (\n            <>\n                <div className=\"popwindow\">\n                    <div className=\"windowtitle text-xl tracking-tight font-bold text-indigo-600\">Level Completed</div>\n                    <div className=\"windowcontent\">\n                        <div className=\"windowtext text-xl tracking-tight\" >\n                            Congratulations, you're completed this level.\n                            </div>\n                        <div className=\"windowtext\">\n                            <span className=\"text-xl tracking-tight\">You have unlocked an achievement.</span><br />\n                            <Link to=\"/achievements\">\n                                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Check Achievement</button></Link>\n                        </div>\n                        <Buttons comp={true} />\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n\nclass Buttons extends React.Component {\n\n    restart = () => {\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div className=\"buttonGroup\">\n                <Link to=\"/level-selection\">\n                    <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Return</button>\n                </Link>\n                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.restart}>Restart</button>\n                {this.props.comp ? <Link to=\"/second\"><button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Next</button></Link> : <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Hint</button>}\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    state = initialState;\n\n    onDragEnd = ({ source, destination }) => {\n        if (!destination) {\n            return;\n        }\n\n        this.setState(state => {\n            return move(state, source, destination);\n        });\n    };\n\n    restart = () => {\n        window.location.reload();\n    }\n\n    setHint = () => {\n        this.setState({ showHint: true });\n    }\n\n    submit = () => {\n        // var stms = []\n        // var blocks = this.state[ATTRS.PLAY];\n        // for (var i=0; i < blocks.length; i++) {\n        //   var block = blocks[i];\n        //   var stmt = {\n        //     \"block\": block.attr1,\n        //     \"expr\": {\n        //       \"block\": block.attr3,\n        //       \"type\": block.attr4,\n        //       \"value\": block.name.split[-1]\n        //     },\n        //     \"ident\": {\n        //       \"block\": block.attr2,\n        //       \"ident\": block.name.split[0]\n        //     }\n        //   }\n        //   stms.push(stmt);\n        // }\n        // console.log(stmt);\n        //need a fetch here to send to backend?\n    }\n\n    render() {\n        const { gameState, showHint, hint, bench } = this.state;\n        const isDropDisabled = gameState === GAME_STATE.DONE;\n\n        return (\n            <div className='canves'>\n                <div className='row'>\n                    <Instruction />\n                    <h2 className=\"left instruction\">{showHint ? hint : \"\"}</h2>\n                    <div className=\"right\">\n                        <Title />\n                        <div className=\"buttonGroup\">\n                            <Link to=\"/level-selection\">\n                                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Return</button>\n                            </Link>\n                            <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.restart}>Restart</button>\n                            <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.setHint}>Hint</button>\n                        </div>\n                    </div>\n                </div>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <div className=\"row row-auto\" style={{ height: \"calc(100% - 408px)\" }}>\n                        <div className=\"left row block bg-indigo-200 rounded-lg p-4 border border-gray-200\">\n                            <Dropzone\n                                pos=\"col\"\n                                id={ATTRS.VAR}\n                                blocks={this.state[ATTRS.VAR]}\n                                isDropDisabled={isDropDisabled}\n                            />\n                            <Dropzone\n                                pos=\"col\"\n                                id={ATTRS.OP}\n                                blocks={this.state[ATTRS.OP]}\n                                isDropDisabled={isDropDisabled}\n                            />\n                            <Dropzone\n                                pos=\"col\"\n                                id={ATTRS.VAL}\n                                blocks={this.state[ATTRS.VAL]}\n                                isDropDisabled={isDropDisabled}\n                            />\n                        </div>\n                        <Dropzone\n                            pos=\"right\"\n                            id=\"bench\"\n                            blocks={bench}\n                            isDropDisabled={isDropDisabled} />\n                    </div>\n                </DragDropContext>\n                <div className='row' style={{ bottom: \"0px\" }}>\n                    <Result blocks={this.state[ATTRS.VAR]} submit={this.submit} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/HighlightedChar.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Data.js",["116"],"export const ATTRS = {\n  VAR: 'var',\n  OP: 'op',\n  VAL: 'val',\n};\n\nexport const BLOCKS = [\n  {\n    name: 'a',\n    name: 'a',\n    attr1: 'assignment',\n    ddd: '0'\n  },\n  {\n    name: 'b',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '1'\n  },\n  {\n    name: 'c',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    attr4: 'int',\n    ddd: '2'\n  },\n  {\n    name: '=',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '3'\n  },\n  {\n    name: '=',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '4'\n  },\n  {\n    name: '=',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '5'\n  },\n  {\n    name: 'a + b',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '6'\n  },\n  {\n    name: '1',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '7'\n  },\n  {\n    name: '3',\n    attr1: 'assignment',\n    attr2: 'variable',\n    attr3: 'literal',\n    ddd: '8'\n  },\n];\n\n","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Dropzone.js",["117"],"import React from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst Dropzone = ({ isDropDisabled, blocks, id, pos }) => (\n  <div className={pos + \" dropzone flex row-auto flex-row\"}>\n    <a style={{ width: \"100%\" }} className=\"scrollble bg-indigo-300 hover:bg-indigo-400 hover:border-transparent hover:shadow-lg group block rounded-lg p-4 border border-gray-200\">\n      <dl className=\"grid sm:block lg:grid xl:block items-center\" style={{ height: \"100%\" }}>\n        <div style={{ height: \"100%\" }}>\n          <dd className=\"group-hover:text-white leading-6 font-medium text-black\" style={{ height: \"100%\" }} >\n            <Droppable droppableId={id} isDropDisabled={isDropDisabled}>\n      {provided => {\n        return (\n          <div className=\"menu block-list\" {...provided.droppableProps} style={{height: \"100%\"}} ref={provided.innerRef}>\n            {blocks.map(({ name, ddd }, index) => (\n              <Block key={ddd} ddd={ddd} name={name} index={index}/>\n            ))}\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n    </dd>\n        </div>\n      </dl>\n    </a>\n  </div>\n);\n\nconst Block = ({ name, index, ddd }) => (\n  <Draggable name={name} key={ddd} draggableId={ddd} index={index}>\n    {provided => {\n      return (\n        <div\n          className=\"menu-item tile tile-centered\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div className=\"codeblock hover:bg-indigo-600 hover:border-transparent tile-content block rounded-lg p-2 border-2 border-indigo-600\" >{name}</div>\n        </div>\n      );\n    }}\n  </Draggable>\n);\n\nexport default Dropzone;","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/utils.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/store/store.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/store/reducer.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game2.js",["118","119","120","121","122"],"import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BLOCKS, ATTRS } from './Data3';\nimport { shuffle, move, GAME_STATE, getTotalScore } from './utils';\nimport Dropzone from './Dropzone';\nimport { Link } from 'react-router-dom';\nimport './Game.css';\n\nconst initialState = {\n  // we initialize the state by populating the bench with a shuffled collection of blocks\n  bench: shuffle(BLOCKS),\n  showHint: false,\n  hint: `You are trying to create the series 1 3 5 7 9\\n You can start with the number 1, and then repeatedly add 2 to this value, till you reach a value of 9\\n Run a while loop starting at 1 and ending at 9, incrementing the variable by 2 every time\\n Try putting each statement in a column. There are 4 columns, so you need 4 statements.\\n  `,\n  [ATTRS.VAR]: [],\n  [ATTRS.EXP]: [],\n  [ATTRS.STATE]: [],\n  [ATTRS.VAL]: [],\n};\n\nclass Instruction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instruction: \"A while loop performs a certain operation till a certain condition becomes false. It can be used to repeatedly perform an action for a fixed number of times. Here, your challenge is to start with 1, and print out a series of odd numbers in ascending order, such that the last number in the series is 9, and each number is 2 larger than the previous number.\",\n      hint: \"\"\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"left instruction\">{this.state.instruction}</div>\n      </>\n    );\n  }\n}\nclass Title extends React.Component {\n  render() {\n    return (\n      <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\" style={{ margin: \"20px auto\" }}>\n        <span className=\"block xl:inline\" >Level</span>\n        <span className=\"block text-indigo-600 xl:inline\"> 1-2 </span>\n      </h1>\n    );\n  }\n}\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMessage: false,\n      answer: false\n    }\n  }\n  onButtonClickHandler = () => {\n    // this.props.submit();\n    this.setState({ showMessage: true });\n    // console.log(this.props.blocks);\n    // console.log(this.props.blocks[0] == 3 && this.props.blocks[1] == 2 && this.props.blocks[2] == 1 && this.props.blocks[3] == 3);\n    if (this.props.blocks[0] == 3 && this.props.blocks[1] == 2 && this.props.blocks[2] == 1 && this.props.blocks[3] == 3) {\n      this.setState({ answer: true });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.showMessage && this.state.answer && <Complete />}\n        <div className=\"left result\">{this.state.showMessage && this.state.answer && <p>1<br />3<br />5<br />7<br />9<br />You are correct!</p>}{this.state.showMessage && !this.state.answer && <p>Your answer is incorrect, please retry.</p>}</div>\n        <div className='right' style={{ margin: \"auto\" }}>\n          <button className=\"gamebutton py-3 px-5 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.onButtonClickHandler}>Submit</button>\n          {this.state.showMessage && !this.state.answer && <button className=\"gamebutton py-3 px-5 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={window.location.reload.bind(window.location)}>Restart</button>}\n        </div>\n      </>\n    );\n  }\n}\n\nclass Complete extends React.Component {\n\n  render() {\n    return (\n      <>\n        <div className=\"popwindow\">\n          <div className=\"windowtitle text-xl tracking-tight font-bold text-indigo-600\">Level Completed</div>\n          <div className=\"windowcontent\">\n            <div className=\"windowtext text-xl tracking-tight\" >\n              Congratulations, you've completed this level.\n          </div>\n            {/* <div className=\"windowtext\">\n              <span className=\"text-xl tracking-tight\">You have unlocked an achievement.</span><br />\n              <Link to=\"/achievements\">\n                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Check Achievement</button></Link>\n            </div> */}\n            <Buttons comp={true} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nclass Buttons extends React.Component {\n\n  restart = () => {\n    window.location.reload();\n  }\n\n  render() {\n    return (\n      <div className=\"buttonGroup\">\n        <Link to=\"/level-selection\">\n          <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Return</button>\n        </Link>\n        <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.restart}>Restart</button>\n        {this.props.comp ? <Link to=\"/third\"><button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Next</button></Link> : <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Hint</button>}\n      </div>\n    );\n  }\n}\n\nclass Game2 extends React.Component {\n  state = initialState;\n\n  onDragEnd = ({ source, destination }) => {\n    if (!destination) {\n      return;\n    }\n\n    this.setState(state => {\n      return move(state, source, destination);\n    });\n  };\n\n  restart = () => {\n    window.location.reload();\n  }\n\n  setHint = () => {\n    this.setState({ showHint: true });\n  }\n  render() {\n    const { gameState, showHint, hint, bench } = this.state;\n    const isDropDisabled = gameState === GAME_STATE.DONE;\n\n    return (\n      <>\n        <div className='canves'>\n          <div className='row'>\n\n            <Instruction />\n            <h2 className=\"left instruction\" >{showHint ? hint : \"\"}</h2>\n            <div className=\"right\">\n              <Title />\n              <div className=\"buttonGroup\">\n                <Link to=\"/level-selection\">\n                  <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Return</button>\n                </Link>\n                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.restart}>Restart</button>\n                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.setHint}>Hint</button>\n              </div>\n            </div>\n          </div>\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            {/* <div className=\"left\">\n              <div class=\"max-w-screen-xl mx-auto px-4\">\n                <div class=\"-mx-6 flex flex-wrap\">\n                  <div class=\"w-full p-3 sm:w-1/4 lg:w-1/4\">\n                    <h2>Statements</h2>\n                  </div>\n                  <div class=\"w-full p-3 sm:w-1/4 lg:w-1/4\">\n                    <h2>Variables</h2>\n                  </div>\n                  <div class=\"w-full p-3 sm:w-1/4 lg:w-1/4\">\n                    <h2>Expressions</h2>\n                  </div>\n                  <div class=\"w-full p-3 sm:w-1/4 lg:w-1/4\">\n                    <h2>Values</h2>\n                  </div>\n                </div>\n              </div>\n            </div> */}\n            <div className=\"row row-auto\" style={{ height: \"calc(100% - 408px)\" }}>\n              <div className=\"row row-auto block bg-indigo-200 rounded-lg p-4 border border-gray-200\" >\n                <Dropzone\n                  pos=\"col\"\n                  id={ATTRS.STATE}\n                  blocks={this.state[ATTRS.STATE]}\n                  isDropDisabled={isDropDisabled}\n                />\n                <Dropzone\n                  pos=\"col\"\n                  id={ATTRS.VAR}\n                  blocks={this.state[ATTRS.VAR]}\n                  isDropDisabled={isDropDisabled}\n                />\n                <Dropzone\n                  pos=\"col\"\n                  id={ATTRS.EXP}\n                  blocks={this.state[ATTRS.EXP]}\n                  isDropDisabled={isDropDisabled}\n                />\n                <Dropzone\n                  pos=\"col\"\n                  id={ATTRS.VAL}\n                  blocks={this.state[ATTRS.VAL]}\n                  isDropDisabled={isDropDisabled}\n                />\n              </div>\n              <Dropzone\n                pos=\"right\"\n                id=\"bench\"\n                blocks={bench}\n                isDropDisabled={isDropDisabled} />\n            </div>\n          </DragDropContext>\n          <div className='row' style={{ bottom: \"0px\" }}>\n            <Result blocks={[this.state[ATTRS.STATE].length, this.state[ATTRS.VAR].length, this.state[ATTRS.EXP].length, this.state[ATTRS.VAL].length]} submit={this.submit}/>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Game2;","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Game3.js",["123","124","125"],"import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { BLOCKS, ATTRS } from './Data2';\nimport { shuffle, move, GAME_STATE, getTotalScore } from './utils';\nimport Dropzone from './Dropzone';\nimport { Link } from 'react-router-dom';\nimport './Game.css';\n\nconst GAME_DURATION = 1000 * 30; // 30 seconds\n\nconst initialState = {\n  // we initialize the state by populating the bench with a shuffled collection of blocks\n  bench: shuffle(BLOCKS),\n  showHint: false,\n  hint:`You are trying to create the series 1 3 5 7 9\\n  You can start with the number 1, and then repeatedly add 2 to this value, till you reach a value of 9\\n  Run a while loop starting at 1 and ending at 9, incrementing the variable by 2 every time\n  `,\n  [ATTRS.VAR]: [],\n  [ATTRS.EXP]: [],\n  [ATTRS.STATE]:[],\n  [ATTRS.VAL]: [],\n  gameState: GAME_STATE.READY,\n  timeLeft: 0,\n};\n\nclass Instruction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instruction: \"A while loop performs a certain operation till a certain condition becomes false. It can be used to repeatedly perform an action for a fixed number of times. Here, your challenge is to start with 1, and print out a series of odd numbers in ascending order, such that the last number in the series is 9, and each number is 2 larger than the previous number.\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"left instruction\">{this.state.instruction}</div>\n    );\n  }\n}\nclass Title extends React.Component {\n  render() {\n    return (\n      <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-3xl\" style={{ margin: \"20px auto\" }}>\n        <span className=\"block xl:inline\" >Level</span>\n        <span className=\"block text-indigo-600 xl:inline\"> 1-3 </span>\n      </h1>\n    );\n  }\n}\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMessage: false\n    }\n  }\n  onButtonClickHandler = () => {\n    this.setState({ showMessage: true });\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.showMessage && <Complete/>}\n        <div className=\"left result\">{this.state.showMessage && <p>c = 3<br />You are correct!</p>}</div>\n        <div className='right' style={{ margin: \"auto\" }}>\n          <button className=\"py-3 px-5 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.onButtonClickHandler}>Submit</button>\n        </div>\n      </>\n    );\n  }\n}\n\nclass Complete extends React.Component {\n\n  render() {\n    return (\n      <>\n        <div className=\"popwindow\">\n          <div className=\"windowtitle text-xl tracking-tight font-bold text-indigo-600\">Level Completed</div>\n          <div className=\"windowcontent\">\n            <div className=\"windowtext text-xl tracking-tight\" >\n              Congratulations, you're completed this level.\n          </div>\n            <div className=\"windowtext\">\n              <span className=\"text-xl tracking-tight\">You have unlocked an achievement.</span><br />\n              <Link to=\"/achievements\">\n                <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Check Achievement</button></Link>\n            </div>\n            <Buttons comp={true} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n\nclass Buttons extends React.Component {\n\n  restart = () => {\n    window.location.reload();\n  }\n  render() {\n    return (\n      <div className=\"buttonGroup\">\n        <Link to=\"/level-selection\">\n          <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Return</button>\n        </Link>\n        <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.restart}>Restart</button>\n      </div>\n    );\n  }\n}\n\nclass Game3 extends React.Component {\n  state = initialState;\n\n  onDragEnd = ({ source, destination }) => {\n    if (!destination) {\n      return;\n    }\n\n    this.setState(state => {\n      return move(state, source, destination);\n    });\n  };\n\n  restart = () => {\n    window.location.reload();\n  }\n  setHint = () => {\n    this.setState({showHint : true});\n  }\n\n  render() {\n    const { gameState,showHint,hint, timeLeft, bench, ...groups  } = this.state;\n    const isDropDisabled = gameState === GAME_STATE.DONE;\n\n    return (\n      <>\n      <div className='canves'>\n        <div className='row'>\n          <Instruction />\n          <h2 className = \"left instruction\">{showHint ? hint : \"\"}</h2>\n          <div className=\"right\">\n            <Title />\n            <div className=\"buttonGroup\">\n        <Link to=\"/level-selection\">\n          <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\">Return</button>\n        </Link>\n        <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick={this.restart}>Restart</button>\n        <button className=\"gamebutton py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-indigo-600 hover:bg-indigo-700\" onClick = {this.setHint}>Hint</button>\n      </div>\n          </div>\n        </div>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div className=\"row row-auto\" style={{ height: \"calc(100% - 408px)\" }}>\n            <div className=\"left row block bg-indigo-200 rounded-lg p-4 border border-gray-200\">\n              <Dropzone\n                pos=\"fullcol\"\n                id={ATTRS.VAR}\n                blocks={this.state[ATTRS.VAR]}\n                isDropDisabled={isDropDisabled}\n              />\n            </div>\n            <Dropzone\n              pos=\"right\"\n              id=\"bench\"\n              blocks={bench}\n              isDropDisabled={isDropDisabled} />\n          </div>\n        </DragDropContext>\n        <div className='row' style={{ bottom: \"0px\" }}>\n          <Result/>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Game3;","/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Data3.js",[],"/Users/weidongyang/Desktop/CodeBee/codebee/src/components/GameSystem/Data2.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":4,"column":27,"nodeType":"132","messageId":"133","endLine":4,"endColumn":33},{"ruleId":"130","severity":1,"message":"134","line":4,"column":35,"nodeType":"132","messageId":"133","endLine":4,"endColumn":41},{"ruleId":"130","severity":1,"message":"135","line":4,"column":43,"nodeType":"132","messageId":"133","endLine":4,"endColumn":48},{"ruleId":"130","severity":1,"message":"136","line":4,"column":50,"nodeType":"132","messageId":"133","endLine":4,"endColumn":54},{"ruleId":"130","severity":1,"message":"136","line":4,"column":50,"nodeType":"132","messageId":"133","endLine":4,"endColumn":54},{"ruleId":"130","severity":1,"message":"137","line":14,"column":35,"nodeType":"132","messageId":"133","endLine":14,"endColumn":49},{"ruleId":"138","severity":1,"message":"139","line":28,"column":6,"nodeType":"140","endLine":28,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":51,"column":9,"nodeType":"132","messageId":"144","endLine":51,"endColumn":16},{"ruleId":"130","severity":1,"message":"145","line":1,"column":26,"nodeType":"132","messageId":"133","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"146","line":3,"column":35,"nodeType":"132","messageId":"133","endLine":3,"endColumn":41},{"ruleId":"130","severity":1,"message":"147","line":11,"column":9,"nodeType":"132","messageId":"133","endLine":11,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":16,"column":22,"nodeType":"150","messageId":"151","endLine":16,"endColumn":24},{"ruleId":"148","severity":1,"message":"149","line":17,"column":26,"nodeType":"150","messageId":"151","endLine":17,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":92,"column":15,"nodeType":"154","endLine":95,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":3,"column":50,"nodeType":"132","messageId":"133","endLine":3,"endColumn":54},{"ruleId":"130","severity":1,"message":"155","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"156","line":19,"column":13,"nodeType":"132","messageId":"133","endLine":19,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":25,"column":24,"nodeType":"150","messageId":"151","endLine":25,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":28,"column":28,"nodeType":"150","messageId":"151","endLine":28,"endColumn":30},{"ruleId":"148","severity":1,"message":"149","line":30,"column":27,"nodeType":"150","messageId":"151","endLine":30,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":43,"column":32,"nodeType":"150","messageId":"151","endLine":43,"endColumn":34},{"ruleId":"148","severity":1,"message":"149","line":56,"column":32,"nodeType":"150","messageId":"151","endLine":56,"endColumn":34},{"ruleId":"148","severity":1,"message":"157","line":56,"column":38,"nodeType":"150","messageId":"151","endLine":56,"endColumn":40},{"ruleId":"158","severity":1,"message":"159","line":10,"column":5,"nodeType":"160","messageId":"151","endLine":10,"endColumn":9},{"ruleId":"152","severity":1,"message":"161","line":6,"column":5,"nodeType":"154","endLine":6,"endColumn":181},{"ruleId":"130","severity":1,"message":"162","line":4,"column":37,"nodeType":"132","messageId":"133","endLine":4,"endColumn":50},{"ruleId":"148","severity":1,"message":"149","line":61,"column":30,"nodeType":"150","messageId":"151","endLine":61,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":61,"column":59,"nodeType":"150","messageId":"151","endLine":61,"endColumn":61},{"ruleId":"148","severity":1,"message":"149","line":61,"column":88,"nodeType":"150","messageId":"151","endLine":61,"endColumn":90},{"ruleId":"148","severity":1,"message":"149","line":61,"column":117,"nodeType":"150","messageId":"151","endLine":61,"endColumn":119},{"ruleId":"130","severity":1,"message":"162","line":4,"column":37,"nodeType":"132","messageId":"133","endLine":4,"endColumn":50},{"ruleId":"130","severity":1,"message":"163","line":9,"column":7,"nodeType":"132","messageId":"133","endLine":9,"endColumn":20},{"ruleId":"130","severity":1,"message":"164","line":137,"column":58,"nodeType":"132","messageId":"133","endLine":137,"endColumn":64},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'authentication' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["167"],"no-redeclare","'varSign' is already defined.","redeclared","'useEffect' is defined but never used.","'signin' is defined but never used.","'status' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'data' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-dupe-keys","Duplicate key 'name'.","ObjectExpression","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'getTotalScore' is defined but never used.","'GAME_DURATION' is assigned a value but never used.","'groups' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [dispatch]",{"range":"170","text":"171"},[1035,1037],"[dispatch]"]